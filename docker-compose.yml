services:
  db:
    image: postgres:15-alpine # ใช้ Alpine เพื่อขนาดเล็ก
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: swiftqr_db
      POSTGRES_USER: swiftqr_user
      POSTGRES_PASSWORD: ${DB_PASSWORD} # อ่านจาก .env ในโฟลเดอร์ backend หรือ root ก็ได้
    volumes:
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - db_data:/var/lib/postgresql/data # Persistent data storage
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend # จะสร้างไฟล์นี้ทีหลัง
    restart: always
    environment:
      DATABASE_URL: postgres://swiftqr_user:${DB_PASSWORD}@db:5432/swiftqr_db
      # เพิ่ม Environment Variables สำหรับ Email Service และ Stripe API Key
      EMAIL_SERVICE_API_KEY: ${EMAIL_SERVICE_API_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      # อื่นๆ ที่จำเป็น
    depends_on:
      - db
    networks:
      - app_network
    # ports: # ไม่ต้องเปิด Port สู่ Host เพราะ Cloudflare Tunnel จะเชื่อมเข้า Nginx ภายใน
  nginx:
    image: nginx:alpine # ใช้ Alpine เพื่อขนาดเล็ก
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    networks:
      - app_network
    # Nginx จะ listen บน port 80 ภายใน Docker Network
    # Cloudflare Tunnel จะถูก config ให้ส่ง request มาที่ Nginx Container นี้ ที่ port 80
    ports:
      - '80:80' # เปิด Port 80 ภายใน Docker Network ให้ Tunnel เชื่อมเข้ามาได้ (ไม่ต้องเปิดสู่ภายนอก Host)

networks:
  app_network:
    driver: bridge # Default bridge network สำหรับ containers คุยกัน

volumes:
  db_data: # Volume สำหรับเก็บข้อมูล Database
